name: Bygg, test og deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.gitignore'
      - '.github/workflows/alerts.yaml'
      - '.github/workflows/snyk.yaml'
      - '.nais/alerterator.yaml'
env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  test-build-app:
    name: Test og bygg applikasjon
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - uses: actions/setup-java@v3
        with:
          java-version: '17.x'
      - name: Cache gradle artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Test and build
        run: ./gradlew test shadowJar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
  build-push-docker-image:
    name: Bygg og push Docker image
    needs: test-build-app
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.IMAGE }}

  deploy-dev-gcp:
    name: Deploy til dev-gcp
    needs: build-push-docker-image
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/naiserator.yaml
          VARS: .nais/dev-gcp.json

#  deploy-prod-gcp:
#    name: Deploy til prod-gcp
#    needs: [ docker-build-and-push, deploy-dev-gcp ]
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: .nais/naiserator.yaml
#          VARS: .nais/prod-gcp.json